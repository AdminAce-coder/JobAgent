// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.19.4
// source: jobAgent.proto

package jobAgent

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	JobAgent_DoJob_FullMethodName = "/jobAgent.JobAgent/DoJob"
)

// JobAgentClient is the client API for JobAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobAgentClient interface {
	DoJob(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type jobAgentClient struct {
	cc grpc.ClientConnInterface
}

func NewJobAgentClient(cc grpc.ClientConnInterface) JobAgentClient {
	return &jobAgentClient{cc}
}

func (c *jobAgentClient) DoJob(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Response)
	err := c.cc.Invoke(ctx, JobAgent_DoJob_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobAgentServer is the server API for JobAgent service.
// All implementations must embed UnimplementedJobAgentServer
// for forward compatibility
type JobAgentServer interface {
	DoJob(context.Context, *Request) (*Response, error)
	mustEmbedUnimplementedJobAgentServer()
}

// UnimplementedJobAgentServer must be embedded to have forward compatible implementations.
type UnimplementedJobAgentServer struct {
}

func (UnimplementedJobAgentServer) DoJob(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoJob not implemented")
}
func (UnimplementedJobAgentServer) mustEmbedUnimplementedJobAgentServer() {}

// UnsafeJobAgentServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobAgentServer will
// result in compilation errors.
type UnsafeJobAgentServer interface {
	mustEmbedUnimplementedJobAgentServer()
}

func RegisterJobAgentServer(s grpc.ServiceRegistrar, srv JobAgentServer) {
	s.RegisterService(&JobAgent_ServiceDesc, srv)
}

func _JobAgent_DoJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobAgentServer).DoJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobAgent_DoJob_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobAgentServer).DoJob(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

// JobAgent_ServiceDesc is the grpc.ServiceDesc for JobAgent service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobAgent_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "jobAgent.JobAgent",
	HandlerType: (*JobAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoJob",
			Handler:    _JobAgent_DoJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jobAgent.proto",
}
